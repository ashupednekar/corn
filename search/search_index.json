{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"serve-rs: A Gunicorn Replacement That won't make you cry","text":""},{"location":"#what-is-serve-rs","title":"What is serve-rs?","text":"<p>Gunicorn served us well\u2014until it didn\u2019t. Between its million worker models, process juggling, and config gymnastics, deploying a WSGI app often felt like a side quest. serve-rs changes that.  </p> <p>Built on Tokio and Hyper, serve-rs is a modern, Rust-powered WSGI server that\u2019s:  </p> <p>\u2705 Fast \u2013 Async-first and optimized for real-world workloads \u2705 Simple \u2013 No more tweaking worker models for the nth time \u2705 Effortless \u2013 Works out of the box with Django, Flask, and friends  </p> <p>And yes, ASGI support is on the roadmap\u2014because it\u2019s 2025, and WSGI alone isn\u2019t cutting it anymore.  </p>"},{"location":"#installation","title":"Installation","text":"<p>aaabash pip install serve-rs aaa  </p>"},{"location":"#running-your-wsgi-app","title":"Running Your WSGI App","text":"<p>If your app has a WSGI entry point (like Django\u2019s <code>wsgi.py</code>), you\u2019re all set.  </p> <p>aaabash serve-rs main.wsgi:application aaa  </p> <p>That\u2019s it. No worker models. No arcane flags. Just run your server(s) (pun intended).  </p>"},{"location":"#how-it-works","title":"How It Works","text":"<ul> <li>Rust-powered core \u2013 serve-rs uses Hyper for high-performance HTTP handling and Tokio for async scheduling.  </li> <li>WSGI-compatible \u2013 Hooks into WSGI entry points, so existing apps work with zero changes.  </li> <li>Planned ASGI support \u2013 Future versions will support ASGI frameworks like FastAPI and Starlette.  </li> </ul>"},{"location":"#want-to-know-more","title":"Want to know more?","text":"<p>Check out the blog for deep dives, benchmarks, and future plans.  </p>"},{"location":"#why-youll-never-look-at-gunicorn-again","title":"Why You\u2019ll Never Look at Gunicorn Again","text":"<ul> <li>No more endless worker models \u2013 You don\u2019t have to Google \"Gunicorn workers explained like I'm five\".  </li> <li>Processes? In 2025? \u2013 In the age of containers and serverless, why are you still micromanaging worker PIDs?  </li> <li>Rust-powered speed \u2013 Because Python\u2019s GIL has slowed you down enough already.  </li> <li>Dead simple deployment \u2013 You don\u2019t need an entire config file just to start your server.  </li> <li>Works with Django \u2013 Because you already have enough problems dealing with it.  </li> </ul>"},{"location":"#tldr-run-serve-rs-and-get-back-to-building-your-app","title":"TL;DR: Run <code>serve-rs</code> and get back to building your app.","text":""},{"location":"Getting%20started/","title":"Getting Started","text":""},{"location":"Getting%20started/#running-your-wsgi-app-without-the-hassle","title":"Running Your WSGI App (Without the Hassle)","text":"<p>So you have a WSGI web app, say <code>fastapi</code>, <code>flask</code> or somwthing from 20 years ago  Navigate to your project directory and check for a WSGI entry point.  </p> <pre><code>(base) ashutoshpednekar@192 svc % ls | grep mana  \nmanage.py  \n(base) ashutoshpednekar@192 svc % ls main/ | grep wsg  \nwsgi.py  \n</code></pre> <p>Now, unlike Gunicorn, where you have to decide between sync, async, gevent, eventlet, tornado, uvicorn workers (seriously, why are there so many worker models?), serve-rs just works:  </p> <pre><code>(base) ashutoshpednekar@192 svc % serve-rs main.wsgi:application  \n[2025-02-22T06:16:50Z INFO  pubsub::common::nats::conn] stream updated successfully  \nWSGI Server running at http://127.0.0.1:8000  \n</code></pre> <p>No <code>--workers</code>, no <code>--preload</code>, no <code>\"which worker model should I use?\"</code>\u2014just run your server(s). (Yes, that pun was intentional.)  </p>"},{"location":"Getting%20started/#test-it-like-you-mean-it","title":"Test It Like You Mean It","text":"<p>Use <code>curl</code>, because real devs test APIs from the terminal:  </p> <pre><code>ashu@ashu:~ $ curl http://localhost:8000/screenmgmt/screen/  \n{\"errors\":[{\"code\":\"ER-0014\",\"detail\":\"Project is not selected. Please select the project to continue.\",\"attr\":null}]}  \n</code></pre>"},{"location":"Installation/","title":"Installation","text":""},{"location":"Installation/#installation","title":"Installation","text":"<p>Why wrestle with Gunicorn\u2019s infinite config options when you can just install serve-rs and move on with your life?  </p> <pre><code>pip install serve-rs  \n</code></pre>"}]}